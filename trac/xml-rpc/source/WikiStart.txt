[[TOC]]

= Homepage =

== Brief Overview ==

Tobi is a next-generation production tool for accessible multimedia formats such as DAISY-3 digital talking books (open standard otherwise known as [http://www.daisy.org/z3986/ ANSI/NISO Z39.86-2005]). Tobi is currently under heavy development, with a first public beta release slated for the end of August 2009 and a first stable release (version 1.0) planned for January 2010. Tobi will offer an intuitive audio recording workflow for full-text digital talking books, with support for rich [http://www.daisy.org/z3986/structure/ DTBook document markup], the XML open-standard currently used by DAISY, NIMAS and ePub (the emerging e-book industry standard).

The image below is a screenshot of a recent build. More pictures are available [http://daisy-trac.cvsdude.com/tobi/wiki/ScreenShots here], and screencasts (i.e. demonstration videos) are archived [ScreenCasts here].

[[Image(http://daniel.weck.free.fr/Tobi_ScreenShot_Full_Text_Audio.png)]]

Tobi is available at no charge, and is [http://www.opensource.org/docs/definition.php free open-source software] distributed under a [wiki:LGPLvsBSD business-friendly license] (i.e. a scheme that permits commercial usage and modifications whilst protecting the original developers' work). Tobi's modular software architecture will allow the development of third-party plugins, which reduces development costs and encourages community effort. The goal is to enable the overall long-term sustainability of the [wiki:inception/architecture/EcoSystem application ecosystem].

Tobi is designed and implemented by the DAISY Consortium collaboratively with international partners, including the Nippon Foundation (Japan), RFB&D (USA) and RNIB (United Kingdom). Application installers will be provided from the time of the first beta release (end of August 2009) and onwards. In the meantime, the source code is available for everyone to compile and run. Developers and organizations are welcome to [ContactUs contact us] if they wish to contribute and/or participate.

The beta builds will be provided for testing purposes. During this public testing phase, we aim at stabilizing the application (i.e. fixing bugs). The plan is to release a stable version of Tobi in January 2010, which will be the first production-ready deliverable. The target feature set is described [wiki:inception/requirements/UniqueSellingPoints here]. The detailed project roadmap is available [wiki:TobiRoadmap here].

Note: behind the scenes, Tobi utilizes the [http://daisy-trac.cvsdude.com/urakawa-sdk Urakawa SDK] (Software Development Kit).

== Deliverables ==

=== Binaries ===

There is no public release yet, so for now, the executable binaries must be built from source by the developers themselves.

=== Source Code ===

Please visit [wiki:dev/Compile this page].

=== Documentation ===

There is no public release yet, so the available documentation is only meant for developers. Most of it emerged from the initial inception phase of the Tobi project (requirements gathering, mockups, technical brainstorming, etc.).

 * Information about the architecture choices can be found [wiki:inception/architecture here].
 * Pointers to the various technologies used in the project can be found [wiki:inception/technology here].
 * Details about how Tobi relates to the DAISY 3 Production Tools Requirements can be found [TobiDaisyProdToolReqs here].
 * Inspirational screenshots can be seen [wiki:inception/ExistingSoftware here] and [wiki:inception/Mockups here].
 * Thoughts about plugins can be found [wiki:inception/PluginExamples here].
 * Development-related pages are located [wiki:dev here].

== Technologies ==

Due to its projected size and complexity, Tobi is an advanced project that requires state-of-the-art software technologies. The long-term ambitions for this project mean that we needed to be forward-thinking in terms of computer performance and software design. One of the project's goals was also to reach a large user and programmer community for the development of an open ecosystem.

The Tobi application is written with Visual Studio 2008 in the C# language for the Microsoft .NET framework. These are currently Windows-only technologies, which is a limitation that we hope will be removed with the advent of the cross-platform [http://www.mono-project.com Mono framework].

The application front-end is made with the [http://www.codeplex.com/wpf Windows Presentation Foundation] (WPF), which is a mature technology in the .NET 3 series. WPF not only provides a great user experience, it also enable designers and programmers to enjoy modern user-interface construction, where separation of concerns is key to the maintainability and testability of a software product.

WPF utilizes an enhanced accessibility model called [http://msdn.microsoft.com/en-us/library/ms747327.aspx UI-Automation], which is supported by modern screen readers. WPF is based on hardware-accelerated scalable graphics, which means that magnification for users with vision impairments is crisp and detailed. WPF also supports graphical themes to meet accessibility requirements or simply to suit user tastes.

Although Tobi will be nearly entirely built upon the modern WPF technology, it will also be fully compatible with the traditional MFC-inherited UI development model, namely: Windows-Forms. This way, Tobi will enable organizations and developers to use legacy code for their contributions. As a matter of fact, Tobi will be re-using code coming from DAISY's own [http://daisy-trac.cvsdude.com/obi Obi application], which is built on the .NET 2 series. In addition, WPF doesn't preclude crossing the boundaries into the unmanaged world, which means that fast native code can be used for processing-intensive routines or low-level access to the operating system.

The Tobi project relies on several open-source technologies, including [http://www.mono-project.com/Mono.Addins Mono.Addin] and the [http://www.codeplex.com/CompositeWPF Composite Application Guidance] for WPF. These libraries play key roles in Tobi's modular architecture, as summarized in [wiki:inception/architecture/EcoSystem this diagram].

PS: the cross-platform [http://silverlight.net Silverlight] browser technology is a subset of WPF, so there is some overlap in terms of development tools and methods. An interesting project in that respect is the [http://www.eclipse4sl.org Eclipse Silverlight plugin]. It is worth noting that there is a Silverlight-based DAISY player called [http://www.buttercupreader.net Buttercup].

== Progress Tracking ==

This Trac-based website provides an integrated tracking system (bugs, tasks, etc.). Up to date progress reports can be accessed [http://daisy-trac.cvsdude.com/tobi/roadmap here] for each active milestone. The general day-to-day project-wide activity can be viewed [http://daisy-trac.cvsdude.com/tobi/timeline here] and can be tracked using this [http://daisy-trac.cvsdude.com/tobi/timeline?changeset=on&wiki=on&ticket=on&ticket_details=on&milestone=on&max=50&daysback=90&format=rss RSS feed]. There is currently no public mailing-list. We intend to set one up before the first public release.

Tracking and reporting for the open development process is available in the [wiki:meetings meeting reports] and [wiki:calls conference call minutes]. The agenda of upcoming events is [wiki:agenda here].

== About ==

=== The DAISY Consortium ===

{{{
#!html
<img src="http://daisy-trac.cvsdude.com/tobi/chrome/uploads/daniel-weck/DaisyLogo.png"
 title="DAISY logo" style="float:left;margin-right:1em;"/>
}}}


DAISY (Digital Accessible Information SYstem) is an open standard for accessible electronic multimedia. The [http://daisy.org DAISY Consortium] is a worldwide body of like-minded organizations collaborating to develop the standards and to implement strategies for the production, exchange and use of next-generation Digital Talking Books (DTB) aimed at people who are blind, visually-impaired, or otherwise print-disabled (e.g. dyslexic). The DAISY Consortium is a non-profit organization.

=== The Urakawa Project ===

''Overview''

The Urakawa project is an incubator created and maintained by the DAISY Consortium, with key support from international partners such as the NRCD (Japan), the INRIA (France) and CWI (Netherlands). The software deliverables of the Urakawa project consist of a software suite including the SDK (Software Development Toolkit), [http://urakawa.sf.net/obi Obi] and [http://daisy-trac.cvsdude.com/tobi/ Tobi].

The Urakawa project was originally hosted at [http://urakawa.sourceforge.net Sourceforge.net Sourceforge], but that site is now obsolete as we have moved our development resources to this new Trac-based collaborative environment. The original website is kept as a legacy placeholder, which is deprecated and won't be maintained.

''History''

{{{
#!html
<img src="http://daisy-trac.cvsdude.com/tobi/chrome/uploads/daniel-weck/UrakawaLogo.png"
 title="Urakawa logo" style="float:left;margin-right:1em;"/>
}}}

The Urakawa project logo is a circle that contains a large symbolic sea wave, to commemorate the birth of the project in a town called "Urakawa", in Hokkaido (nothern Japan). Urakawa-town has been the setting of devastating tsunamis, and its population has gathered an experience that is now being shared through training and oral communication. The people of Urakawa-town are forward-thinkers who have become volunteers to take part in a large research and experimentation programme for the inclusion of ICT (Information Communication Technology) in evacuation training. Interactive multimedia is a key contributor to the success of disaster preparedness projects, as it meets the needs of a broad category of end-users that have unequal access to safety information. Training manuals produced in accessible DAISY Digital Talking Books are helping not only the print-disabled or visually-impaired, but also persons with various degrees of socio-cognitive disabilities such as the elderly and people with autism. In this era of information society, the DAISY Consortium is dedicated to provide free production and playback tools so that everyone can contribute regardless of their purchasing power.